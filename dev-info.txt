Overview of WCAG 2.0 (if not already covered by external trainer).
A sneak peek at WCAG 2.1

The developer's responsibility in Accessibility

Semantic HTML
    First rule of ARIA
    Brief look at commonly used HTML elements and what they mean
        <div>
        <html>
        <body>
        <head>
        <h1>-<h6>
        <input>
        <label>
        <i> italic and used for icons
        <ul>
        <ol>
        <li>
        <a>
        <dl>
        <dd>
        <dt>
        <p>
        <span>
        <pre>
        <select>
        <option>
        <table>
        <thead>
        <tbody>
        <tr>
        <th>
        <td>
        <textarea>
        <form>
        <button>
        <title>
        <fieldset>
        <legend>
        <strong>
        <b>
        Semantic elements in HTML5 and why we use them
            <article>
            <aside>
            <details>
            <figcaption>
            <figure>
            <footer>
            <header>
            <main>
            <mark>
            <nav>
            <section>
            <summary>
            <time>

Developer techniques + helper tooling
    (All techniques will be explained starting from HTML and working back to achieving it in a JavascriptFramework like React)
    ARIA roles, states and properties + Rules of ARIA
        What is ARIA and when does it exist
        The rules of ARIA
        When to use ARIA
        What are the common roles (still to be selected)
        What are the common ARIA states and properties (still to be selected)
    Responsive websites: Changing viewports and resizing the website
        Responsive design and why it is needed.
        Example Bootstrap CSS
    Accessibility element inspectors and the accessibility tree
        Explain what the accessibility tree is
        Chrome accessibility inspector
        EDGE accessibility inspector
    Visually hidden elements and why they are useful
    Hidden and disabled elements
    Accessible labelling
        Implicit labelling
        Explicit labelling
        Labelling with ARIA
        Labelling with visually hidden elements
    Accessible read-only pages
        Connecting visual key-value pairs accessibly with <dl>
    Accessible tables
        When to use tables
        How to build a proper HTML table
        How to label table columns
        Making row clicks accessible
    Accessible descriptive text such as errors and input masks
        Using ARIA-describedby
    Buttons vs links
        When to use links
        When to use buttons
        Styling buttons and links
        Image / icon buttons
    Skiplinks
        Creating skiplinks in your application
    Focus, focus flow and focus control
        What is keyboard focus
        How to keep the keyboard focus visible
        Making elements focusable with tabindex
        Thinking about focus flow in your application and how to achieve it in HTML
        Programmatically controlling focus
    Contrast
        Calculate a contrast rich colour palette
    Clear page titles
        Setting the HTML page title in your HTML
    Page language
        Setting the page and element language attributes
    A11y linter plugins
        eslint-plugin-jsx-a11y
    WAVE
    aXe
        aXe
        aXe-core
        react-axe
    Colour contrast visualisers
        Paciello group tool
        Colour contrast analyser browser plugin
        aXe
        WAVE
    Visual disability simulators
        No-Coffee
    Screen readers
        NVDA
        JAWS
        VoiceOver (where to get a mac?)

The extra challenges that comes from using a Javascript framework
    Javascript rendering vs static/server generated HTML
    Routing
    Framework responses and delays (example live regions in React)
    Component composition in a semantic website vs re-use: Balance of complexity

Workshop
    Use techniques explained to create a small accessible application in the framework/tech of your choice
    Use techniques explained to find and fix accessibility errors in a simple website

Advanced developer techniques
    ARIA live regions
    Advanced ARIA states and properties (still to be selected)
    Building advanced accessible widgets (it may still become a subset if this)
        Navigation list
        Toggle button
        Tab control
        Collapsible items
        Modals and popups
        Page navigation
        Date picker
        Spinners
        Progress bars
        File upload

Workshop
    Select (or randomly pick) a widget type to build. Basic skeletons will be provided

