Reasons for a11y.
Why do we make websites?
- So that users can accomplish something
- To market our brand
- To provide services
- We should not end up making websites only for ourselves
- To give people freedom

Maybe have a look at a video of someone navigating with AT
https://www.youtube.com/watch?v=kziXJX6a7E4
https://www.youtube.com/watch?v=VIRx3RJzbZg - very good aside from the last canadian bit
https://www.youtube.com/watch?v=sUnpmy8K17U Dutch video about UN
https://www.youtube.com/watch?v=uB5IMGgO58o&list=PL691CFED9266E3EBC - paper prototyping
https://www.youtube.com/watch?v=ko9xVC6sR5Q - inaccessible websites can cause frustration

Investigate further what is the current state in Netherlands

We are potentially exluding a very large amount of people
 <p><i>One in six people in the European Union (EU) has a disability
                    that ranges from mild to severe making around 80 million who are often prevented from taking part
                    fully in society
                    and the economy because of environmental and attitudinal barriers. For people with
                    disabilities the rate of poverty is 70% higher than the average partly due to limited access to
                    employment.</i> - European Commission</p>
                <p style="font-size:27px;"><a href="http://bit.ly/1LdRaml">http://bit.ly/1LdRaml</a></p>

Reasons why websites are not accessible +
Where did we go wrong
Websites are not statically printed pages
Websites are not desktop applications
Designing for the average user
Disabled people would not want to use this application (making assumptions about a very large group of people).
It is only an internal application
Making accessible websites costs too much (MVP)
HTML has a specification it is not freeform
We tend to think that accessibility is only about people with extreme disabilities

Why do we not hear more complaints from disabled poeple around the websites we build?
- People ask trusted friends/family for help
- Admitting not being able to do something can be embarassing
- Callcentres and help forms are in themselves not guaranteed to be accessible
- Finding ways around is easier than admitting disability
- Non essential tasks are not completed
- People go to competitors instead if they do offer accessible options
- Our websites get used by only the people we allow them to be used by
- Actual complaints based on law leads can lead to lawsuits.

Avoid designing for the average user:
The average user is created from the combination of all users. What
we get is, in fact, a completely different user. None of our users is
like the average user. Therefore, when designing for that artificial
individual we create something that doesn’t fit anyone’s needs.
— “Designing for the extremes,” Susana Gonzalez Ruiz

Targeting a so-called average user is a disastrous interface
design strategy, because average users do not exist — except
for the handful of people teetering on the apex of your bell
curve. The popular utensil firm OXO knows this well and by
catering to extreme situations and disabilities first, they’ve
produced highly ergonomic products with mainstream
appeal. In OXOs own words:133
When all users’ needs are taken into consideration in the initial
design process, the result is a product that can be used by the
broadest spectrum of users.”


Inclusive interfaces are robust interfaces. Working for everyone

Button example:
Graphically designed image button vs elaborate html custom button vs button element
Image button cannot scale well, does not display when images are not displayed and does not provide its text accessibly


There are 140,737,479,966,720 combinations of hexcodes. Obviously
not all of them are accessible. If only 1% of all color combinations
are accessible then there are still almost 141 million combinations to
choose from. This seems more than adequate to paint any bikeshed
you will come across for the rest of your career.”
— “The Veil Of Ignorance”, Adam Morse3

Important to realize that the entire browser is an interface

Lang attribute - Even allows browsers to expose spellcheck

Allow responsiveness, resize and pinch to zoom

<!-- don’t use this -->
<meta name="viewport" content="width=device-width, initialscale=
1.0, minimum-scale=1.0, maximum-scale=1.0,
user-scalable=no">
<!-- use this -->
<meta name="viewport" content="width=device-width,
initial-scale=1.0">

As a rule of thumb, avoid using positioned
elements, especially with position: fixed. When content is
enlarged, any elements stuck to a certain part of the screen
are liable to become blind spots.

html {
font-size: 100%;
}
In the example above, 100% is equal to 16px if the user has
not adjusted the font size manually, either in their operating
system or browser settings (e.g. under Preferences → Content
in Firefox

It is true that a greater number of users will operate fullpage
zoom using Cmd (or Ctrl) and +, but modern browsers
and operating systems still support text-only resizing, and
so should you. To make sure font-size, padding and margin
all resize proportionately, each should be set using the relative
units rem or em.

Look at progressive enhancement (take care of webfonts and use fallbacks)

Take care of your page title. The name should be clearn and change when you navigate. Use a pattern like "Site name| Authored by"

Use semantic HTML and skiplinks
Give a correct heading structure (do not skip levels)
Provide clean link labels
landmark nav and navigation regions (refer to heydons book p127)

Avoid moving something with CSS when it should not be that place in the focus order. Like putting the navigation at the
bottom and moving it up with CSS



The paragraph:
Select a readable typeface and not one that is prone to be hard to read. Think of dyslexia
Avoid overly long text lines (around 45 -70 characters)
Avoid text-align: justify; Even though it may look neater it is less readable due to eneven spacing
Avoid too low and too high contrast (Sufferers of scotopic
sensitivity syndrome27 (or Irlen syndrome) are sensitive
to glare, and stark contrast can result in blurred text or
text that appears to move around.)
Undelines for links (look at options not bisecting descenders)
Indicate focus
Identify external links

Then: • Write short paragraphs, sentences and words.
“I purchased a mammalian companion of the canine
variety” is never better than “I bought a dog.”
33 http://alistapart.com/blog/post/content-first-design
A Paragraph 67
• Be wary of passive sentences.34 They can often be
replaced by a more direct alternative. There’s no need
to say the convoluted, “a pork pie was eaten by Harry”
when you can just as well say, “Harry ate a pork pie.”
• Eliminate redundancy. It’s rarely worth saying the same
thing twice in different ways. Avoid repetition. (See
what I did there?)
• Vary the length of sentences and paragraphs.

Leave creativity to the bad designers. This is not the place to do
something different. If a convention exists, use it.”
— Mark Boulton, “Icons, Symbols and a semiotic Web”101

Look at page 158 heydons book

Here is a little revelation. People are not really into using products.
Any time spent by a user operating an interface, twisting knobs,
pulling levers or tapping buttons is time wasted. Rather, people are
more interested in the end result and in obtaining that result
in the quickest, least intrusive and most efficient manner possible.”
— Goran Peuc “Nobody Wants To Use Your Product” 123

Inclusive prototyping
Paper prototyping?
Benefits and bad points of fully functional prototypes
It’s not polished. The trouble with high-fidelity
mockups and prototypes is that they tend to look
finished. People are polite and you won’t get honest
feedback about something that looks like it’s had a lot
of work put into it. That it’s made of paper at all means
it’s clearly only an analogy of the real app, so feedback
about aesthetic particulars is kept to a minimum. Focus
remains on whether the idea solves the problem well.


Everybody is a keyboard user when eating with their mouse hand.”
— Adrian Roselli134

When inclusion is integrated into the design process in
this way, it’s very little more work. In fact, using standard
technologies in expected ways often means less work. For
example, devising an inaccessible, custom-authored <div
class="heading-3"> is actually more typing than using a
standard <h3>. It gets even more verbose when you’re wedded
to using a <div> and have to fix the heading accessibility
after the fact with ARIA attributes:

Giving users choice is the first of
Henny Swan’s135 accessible UX principles, as developed at
the BBC:
1. Give users choice.
2. Put users in control.
3. Design with familiarity in mind.
4. Prioritize features that add value.

As “A Web For Everyone”138 implores:
Present things that are the same in the same way. One way to
help users find their way around a site is to be consistent in how
elements of the site are presented and labeled, which doesn’t mean
that the site must be boring with no variation or texture.”

Look at search engine result pages p216 Heydon's book

AVOID INFINITE SCROLL
Instead use a load more button

Do not make assumptions about how users use your forms. Like if you have a login form do not hide the signup option
right at the bottom. This could force some users to traverse a lot of information when they have to use this

Do NOT use placeholder as a labeling technique

Bearing in mind that <fieldset>s are pointless without
<legend>s, you can use the following three rules of thumb
to decide if a <fieldset> is appropriate.
1. Is there more than one distinct set of fields in total, in
the same form or context? Yes? Use <fieldset>s. No?
Don’t use <fieldset>s.
2. Does a set actually only have one field in it? Yes? You
don’t need a <fieldset>. No? Use a <fieldset> if (1)
applies.
3. Can you think of a <legend> that would make sense
or aid comprehension if used with each of the
<fieldset>’s field labels? Yes? Use a <fieldset>.
No? Don’t use a <fieldset>.

Look out when using * to denote required fields so that screen readers do not read 'asterisk'

Give users an option to display an entered password

Use CSS to display badly written markup


